// @generated by protoc-gen-es v2.2.5 with parameter "import_extension=ts"
// @generated from file protos/notification/notification_service.proto (package notification, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protos/notification/notification_service.proto.
 */
export declare const file_protos_notification_notification_service: GenFile;

/**
 * Messages pour les abonnements
 *
 * @generated from message notification.SubscriptionRequest
 */
export declare type SubscriptionRequest = Message<"notification.SubscriptionRequest"> & {
  /**
   * @generated from field: string userId = 1;
   */
  userId: string;
};

/**
 * Describes the message notification.SubscriptionRequest.
 * Use `create(SubscriptionRequestSchema)` to create a new message.
 */
export declare const SubscriptionRequestSchema: GenMessage<SubscriptionRequest>;

/**
 * Messages pour les notifications
 *
 * @generated from message notification.Notification
 */
export declare type Notification = Message<"notification.Notification"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string userId = 2;
   */
  userId: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string content = 4;
   */
  content: string;

  /**
   * "MESSAGE", "GROUP", "SYSTEM"
   *
   * @generated from field: string type = 5;
   */
  type: string;

  /**
   * @generated from field: string timestamp = 6;
   */
  timestamp: string;

  /**
   * @generated from field: bool read = 7;
   */
  read: boolean;
};

/**
 * Describes the message notification.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export declare const NotificationSchema: GenMessage<Notification>;

/**
 * Messages pour les param√®tres de notification
 *
 * @generated from message notification.NotificationSettingsRequest
 */
export declare type NotificationSettingsRequest = Message<"notification.NotificationSettingsRequest"> & {
  /**
   * @generated from field: string userId = 1;
   */
  userId: string;

  /**
   * @generated from field: bool enableSound = 2;
   */
  enableSound: boolean;

  /**
   * @generated from field: bool enableDesktopNotifications = 3;
   */
  enableDesktopNotifications: boolean;
};

/**
 * Describes the message notification.NotificationSettingsRequest.
 * Use `create(NotificationSettingsRequestSchema)` to create a new message.
 */
export declare const NotificationSettingsRequestSchema: GenMessage<NotificationSettingsRequest>;

/**
 * @generated from message notification.NotificationSettingsResponse
 */
export declare type NotificationSettingsResponse = Message<"notification.NotificationSettingsResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message notification.NotificationSettingsResponse.
 * Use `create(NotificationSettingsResponseSchema)` to create a new message.
 */
export declare const NotificationSettingsResponseSchema: GenMessage<NotificationSettingsResponse>;

/**
 * Service de notifications
 *
 * @generated from service notification.NotificationService
 */
export declare const NotificationService: GenService<{
  /**
   * @generated from rpc notification.NotificationService.Subscribe
   */
  subscribe: {
    methodKind: "server_streaming";
    input: typeof SubscriptionRequestSchema;
    output: typeof NotificationSchema;
  },
  /**
   * @generated from rpc notification.NotificationService.UpdateNotificationSettings
   */
  updateNotificationSettings: {
    methodKind: "unary";
    input: typeof NotificationSettingsRequestSchema;
    output: typeof NotificationSettingsResponseSchema;
  },
}>;

