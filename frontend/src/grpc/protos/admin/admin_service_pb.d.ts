// @generated by protoc-gen-es v2.2.5 with parameter "import_extension=ts"
// @generated from file protos/admin/admin_service.proto (package admin, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protos/admin/admin_service.proto.
 */
export declare const file_protos_admin_admin_service: GenFile;

/**
 * @generated from message admin.CheckRequest
 */
export declare type CheckRequest = Message<"admin.CheckRequest"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;
};

/**
 * Describes the message admin.CheckRequest.
 * Use `create(CheckRequestSchema)` to create a new message.
 */
export declare const CheckRequestSchema: GenMessage<CheckRequest>;

/**
 * @generated from message admin.CheckResponse
 */
export declare type CheckResponse = Message<"admin.CheckResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message admin.CheckResponse.
 * Use `create(CheckResponseSchema)` to create a new message.
 */
export declare const CheckResponseSchema: GenMessage<CheckResponse>;

/**
 * Messages pour la gestion des utilisateurs
 *
 * @generated from message admin.UserListRequest
 */
export declare type UserListRequest = Message<"admin.UserListRequest"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;
};

/**
 * Describes the message admin.UserListRequest.
 * Use `create(UserListRequestSchema)` to create a new message.
 */
export declare const UserListRequestSchema: GenMessage<UserListRequest>;

/**
 * @generated from message admin.UserListResponse
 */
export declare type UserListResponse = Message<"admin.UserListResponse"> & {
  /**
   * @generated from field: repeated admin.User users = 1;
   */
  users: User[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;
};

/**
 * Describes the message admin.UserListResponse.
 * Use `create(UserListResponseSchema)` to create a new message.
 */
export declare const UserListResponseSchema: GenMessage<UserListResponse>;

/**
 * @generated from message admin.UserActionRequest
 */
export declare type UserActionRequest = Message<"admin.UserActionRequest"> & {
  /**
   * @generated from field: string userId = 1;
   */
  userId: string;

  /**
   * @generated from field: string adminId = 2;
   */
  adminId: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message admin.UserActionRequest.
 * Use `create(UserActionRequestSchema)` to create a new message.
 */
export declare const UserActionRequestSchema: GenMessage<UserActionRequest>;

/**
 * @generated from message admin.UserActionResponse
 */
export declare type UserActionResponse = Message<"admin.UserActionResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message admin.UserActionResponse.
 * Use `create(UserActionResponseSchema)` to create a new message.
 */
export declare const UserActionResponseSchema: GenMessage<UserActionResponse>;

/**
 * Messages pour la gestion des messages
 *
 * @generated from message admin.MessageActionRequest
 */
export declare type MessageActionRequest = Message<"admin.MessageActionRequest"> & {
  /**
   * @generated from field: string messageId = 1;
   */
  messageId: string;

  /**
   * @generated from field: string adminId = 2;
   */
  adminId: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message admin.MessageActionRequest.
 * Use `create(MessageActionRequestSchema)` to create a new message.
 */
export declare const MessageActionRequestSchema: GenMessage<MessageActionRequest>;

/**
 * @generated from message admin.MessageActionResponse
 */
export declare type MessageActionResponse = Message<"admin.MessageActionResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message admin.MessageActionResponse.
 * Use `create(MessageActionResponseSchema)` to create a new message.
 */
export declare const MessageActionResponseSchema: GenMessage<MessageActionResponse>;

/**
 * Structure d'utilisateur
 *
 * @generated from message admin.User
 */
export declare type User = Message<"admin.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string role = 4;
   */
  role: string;

  /**
   * @generated from field: bool isBanned = 5;
   */
  isBanned: boolean;

  /**
   * @generated from field: string createdAt = 6;
   */
  createdAt: string;
};

/**
 * Describes the message admin.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * Service d'administration
 *
 * @generated from service admin.AdminService
 */
export declare const AdminService: GenService<{
  /**
   * @generated from rpc admin.AdminService.GetAllUsers
   */
  getAllUsers: {
    methodKind: "unary";
    input: typeof UserListRequestSchema;
    output: typeof UserListResponseSchema;
  },
  /**
   * @generated from rpc admin.AdminService.BanUser
   */
  banUser: {
    methodKind: "unary";
    input: typeof UserActionRequestSchema;
    output: typeof UserActionResponseSchema;
  },
  /**
   * @generated from rpc admin.AdminService.DeleteMessage
   */
  deleteMessage: {
    methodKind: "unary";
    input: typeof MessageActionRequestSchema;
    output: typeof MessageActionResponseSchema;
  },
  /**
   * @generated from rpc admin.AdminService.Check
   */
  check: {
    methodKind: "unary";
    input: typeof CheckRequestSchema;
    output: typeof CheckResponseSchema;
  },
}>;

