// @generated by protoc-gen-es v2.2.5 with parameter "import_extension=ts"
// @generated from file protos/user/user_service.proto (package user, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protos/user/user_service.proto.
 */
export declare const file_protos_user_user_service: GenFile;

/**
 * @generated from message user.RegisterRequest
 */
export declare type RegisterRequest = Message<"user.RegisterRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string password = 3;
   */
  password: string;
};

/**
 * Describes the message user.RegisterRequest.
 * Use `create(RegisterRequestSchema)` to create a new message.
 */
export declare const RegisterRequestSchema: GenMessage<RegisterRequest>;

/**
 * @generated from message user.RegisterResponse
 */
export declare type RegisterResponse = Message<"user.RegisterResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message user.RegisterResponse.
 * Use `create(RegisterResponseSchema)` to create a new message.
 */
export declare const RegisterResponseSchema: GenMessage<RegisterResponse>;

/**
 * @generated from message user.LoginRequest
 */
export declare type LoginRequest = Message<"user.LoginRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message user.LoginRequest.
 * Use `create(LoginRequestSchema)` to create a new message.
 */
export declare const LoginRequestSchema: GenMessage<LoginRequest>;

/**
 * @generated from message user.LoginResponse
 */
export declare type LoginResponse = Message<"user.LoginResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * JWT token
   *
   * @generated from field: string token = 3;
   */
  token: string;

  /**
   * @generated from field: user.User user = 4;
   */
  user?: User;
};

/**
 * Describes the message user.LoginResponse.
 * Use `create(LoginResponseSchema)` to create a new message.
 */
export declare const LoginResponseSchema: GenMessage<LoginResponse>;

/**
 * @generated from message user.GetUserProfileRequest
 */
export declare type GetUserProfileRequest = Message<"user.GetUserProfileRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message user.GetUserProfileRequest.
 * Use `create(GetUserProfileRequestSchema)` to create a new message.
 */
export declare const GetUserProfileRequestSchema: GenMessage<GetUserProfileRequest>;

/**
 * @generated from message user.GetUserProfileResponse
 */
export declare type GetUserProfileResponse = Message<"user.GetUserProfileResponse"> & {
  /**
   * @generated from field: user.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message user.GetUserProfileResponse.
 * Use `create(GetUserProfileResponseSchema)` to create a new message.
 */
export declare const GetUserProfileResponseSchema: GenMessage<GetUserProfileResponse>;

/**
 * @generated from message user.UpdateUserProfileRequest
 */
export declare type UpdateUserProfileRequest = Message<"user.UpdateUserProfileRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: string avatar_url = 3;
   */
  avatarUrl: string;
};

/**
 * Describes the message user.UpdateUserProfileRequest.
 * Use `create(UpdateUserProfileRequestSchema)` to create a new message.
 */
export declare const UpdateUserProfileRequestSchema: GenMessage<UpdateUserProfileRequest>;

/**
 * @generated from message user.UpdateUserProfileResponse
 */
export declare type UpdateUserProfileResponse = Message<"user.UpdateUserProfileResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message user.UpdateUserProfileResponse.
 * Use `create(UpdateUserProfileResponseSchema)` to create a new message.
 */
export declare const UpdateUserProfileResponseSchema: GenMessage<UpdateUserProfileResponse>;

/**
 * @generated from message user.User
 */
export declare type User = Message<"user.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: string avatar_url = 4;
   */
  avatarUrl: string;

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt: string;
};

/**
 * Describes the message user.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from service user.UserService
 */
export declare const UserService: GenService<{
  /**
   * @generated from rpc user.UserService.Register
   */
  register: {
    methodKind: "unary";
    input: typeof RegisterRequestSchema;
    output: typeof RegisterResponseSchema;
  },
  /**
   * @generated from rpc user.UserService.Login
   */
  login: {
    methodKind: "unary";
    input: typeof LoginRequestSchema;
    output: typeof LoginResponseSchema;
  },
  /**
   * @generated from rpc user.UserService.GetUserProfile
   */
  getUserProfile: {
    methodKind: "unary";
    input: typeof GetUserProfileRequestSchema;
    output: typeof GetUserProfileResponseSchema;
  },
  /**
   * @generated from rpc user.UserService.UpdateUserProfile
   */
  updateUserProfile: {
    methodKind: "unary";
    input: typeof UpdateUserProfileRequestSchema;
    output: typeof UpdateUserProfileResponseSchema;
  },
}>;

