syntax = "proto3";

package chat;

option java_multiple_files = true;
option java_package = "com.chat.chat";
option java_outer_classname = "ChatProto";

// Service de messagerie
service ChatService {
  rpc SendMessage (MessageRequest) returns (MessageResponse);
  rpc GetMessageHistory (HistoryRequest) returns (stream Message);
  rpc StreamMessages (StreamRequest) returns (stream Message);
  rpc CreateGroup (GroupRequest) returns (GroupResponse);
  rpc GetUserGroups (UserGroupsRequest) returns (UserGroupsResponse);
}

// Messages pour l'envoi de messages
message MessageRequest {
  string senderId = 1;
  string receiverId = 2; // Peut être un userId ou un groupId
  string content = 3;
  bool isGroup = 4;
}

message MessageResponse {
  bool success = 1;
  string messageId = 2;
  string timestamp = 3;
}

// Messages pour l'historique
message HistoryRequest {
  string userId = 1;
  string targetId = 2; // Peut être un userId ou un groupId
  bool isGroup = 3;
  int32 limit = 4;
}

// Messages pour le streaming en temps réel
message StreamRequest {
  string userId = 1;
}

// Structure de message
message Message {
  string id = 1;
  string senderId = 2;
  string senderName = 3;
  string receiverId = 4;
  string content = 5;
  string timestamp = 6;
  bool isGroup = 7;
}

// Messages pour la gestion des groupes
message GroupRequest {
  string creatorId = 1;
  string groupName = 2;
  repeated string memberIds = 3;
}

message GroupResponse {
  bool success = 1;
  string groupId = 2;
  string groupName = 3;
}

message UserGroupsRequest {
  string userId = 1;
}

message UserGroupsResponse {
  repeated Group groups = 1;
}

message Group {
  string id = 1;
  string name = 2;
  string creatorId = 3;
  repeated string memberIds = 4;
}