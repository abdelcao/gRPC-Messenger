services:

  admin-service:
    build:
      context: ./backend/admin
    ports:
      - "${ADMIN_PORT}:${ADMIN_PORT}"
    container_name: admin-service
    environment:
      - SERVER_PORT=${ADMIN_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  auth-service:
    build:
      context: ./backend/auth
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    container_name: auth-service
    environment:
      - SERVER_PORT=${AUTH_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  user-service:
    build:
      context: ./backend/user
    ports:
      - "${USER_PORT}:${USER_PORT}"
    container_name: user-service
    environment:
      - SERVER_PORT=${USER_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  chat-service:
    build:
      context: ./backend/chat
    ports:
      - "${CHAT_PORT}:${CHAT_PORT}"
    container_name: chat-service
    environment:
      - SERVER_PORT=${CHAT_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net 

  notification-service:
    build:
      context: ./backend/notification
    ports:
      - "${NOTIFICATION_PORT}:${NOTIFICATION_PORT}"
    container_name: notification-service
    environment:
      - SERVER_PORT=${NOTIFICATION_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net 

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat-frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - envoy
    networks:
      - chat-net

  envoy:
    image: envoyproxy/envoy:v1.28-latest
    container_name: envoy
    volumes:
      - ./envoy:/etc/envoy
    ports:
      - "${ENVOY_PORT}:${ENVOY_PORT}"
    command: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml --log-level debug
    networks:
      - chat-net

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - chat-net

  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - chat-net

  redis:
    image: redis:alpine
    container_name: chat-redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - chat-net

networks:
  chat-net:
    driver: bridge
