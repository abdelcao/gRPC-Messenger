services:
  admin-service:
    build:
      context: ./backend/admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "9091:9091"
    env_file:
      - ./backend/admin-service/.env
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "9091:9091"
    env_file:
      - ./backend/auth-service/.env
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "9091:9091"
    env_file:
      - ./backend/user-service/.env
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  chat-service:
    build:
      context: ./backend/chat-service
      dockerfile: Dockerfile
    container_name: chat-service
    ports:
      - "9091:9091"
    env_file:
      - ./backend/chat-service/.env
    depends_on:
      - mysql
      - redis
    networks:
      - chat-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat-frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - envoy
    networks:
      - chat-net

  envoy:
    image: envoyproxy/envoy:v1.28-latest
    container_name: envoy
    volumes:
      - ./envoy:/etc/envoy
    ports:
      - "${ENVOY_PORT}:${ENVOY_PORT}"
    networks:
      - chat-net

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - chat-net

  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - chat-net

  redis:
    image: redis:alpine
    container_name: chat-redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - chat-net

networks:
  chat-net:
    driver: bridge
